{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovieInput/NewMovieInput.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovieInput","this","props","name","value","placeholder","onChange","onBlur","error","toUpperCase","slice","type","required","classNames","Form__inputErr","React","PureComponent","regExp","NewMovie","state","errTitle","errImgUrl","errImdbUrl","errImdbId","handleChange","event","target","setState","validateTitle","trim","validateImgUrl","test","validateImdbUrl","validateImdbId","submit","addMovie","preventDefault","every","el","onSubmit","disabled","Component","App","moviesFromServer","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5744e495.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  name: string;\n  value: string;\n  placeholder: string;\n  onChange: (event:\n  React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  onBlur: () => boolean;\n  error: null | string;\n};\n\nexport class NewMovieInput extends React.PureComponent<Props> {\n  render() {\n    const {\n      name,\n      value,\n      placeholder,\n      onChange,\n      onBlur,\n      error,\n    } = this.props;\n\n    return (\n      <>\n        <div className=\"Form__part\">\n          <p>\n            {name[0].toUpperCase() + name.slice(1)}\n            <span className=\"Form__star\">*</span>\n          </p>\n\n          <label>\n            <input\n              type=\"text\"\n              name={name}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onBlur={onBlur}\n              required\n              className={classNames(\n                'Form__input', { Form__inputErr: error },\n              )}\n            />\n          </label>\n        </div>\n        {error && <span className=\"Form__error\">{error}</span>}\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport { NewMovieInput } from '../NewMovieInput/NewMovieInput';\n\ntype Props = {\n  addMovie: (\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string\n  ) => void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  errTitle: null | string;\n  errImgUrl: null | string;\n  errImdbUrl: null | string;\n  errImdbId: null | string;\n};\n\n// eslint-disable-next-line\nconst regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errTitle: null,\n    errImgUrl: null,\n    errImdbUrl: null,\n    errImdbId: null,\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n\n    if (name === 'title') {\n      this.setState({\n        errTitle: null,\n      });\n    }\n\n    if (name === 'imdbId') {\n      this.setState({\n        errImdbId: null,\n      });\n    }\n\n    if (name === 'imgUrl') {\n      this.setState({\n        errImgUrl: null,\n      });\n    }\n\n    if (name === 'imdbUrl') {\n      this.setState({\n        errImdbUrl: null,\n      });\n    }\n  };\n\n  validateTitle = () => {\n    const { title } = this.state;\n\n    if (!title.trim()) {\n      this.setState({\n        errTitle: 'Please enter title',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateImgUrl = () => {\n    const { imgUrl } = this.state;\n\n    if (!imgUrl.trim() || !regExp.test(imgUrl)) {\n      this.setState({\n        errImgUrl: 'Please enter valid image link',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateImdbUrl = () => {\n    const { imdbUrl } = this.state;\n\n    if (!imdbUrl.trim() || !regExp.test(imdbUrl)) {\n      this.setState({\n        errImdbUrl: 'Please enter valid IMDB link',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateImdbId = () => {\n    const { imdbId } = this.state;\n\n    if (!imdbId.trim()) {\n      this.setState({\n        errImdbId: 'Please enter IMDB Id',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  submit = (event: React.SyntheticEvent) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n    const { addMovie } = this.props;\n\n    event.preventDefault();\n\n    const arrFunc = [this.validateTitle(),\n      this.validateImdbId(),\n      this.validateImdbUrl(),\n      this.validateImgUrl()];\n    const validate = arrFunc.every(el => el);\n\n    if (validate) {\n      addMovie(title, description, imgUrl, imdbUrl, imdbId);\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errImdbId,\n      errImgUrl,\n      errTitle,\n      errImdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.submit}>\n        <h2 className=\"Form__title\">Create new movie</h2>\n        <NewMovieInput\n          name=\"title\"\n          value={title}\n          placeholder=\"Inception\"\n          onChange={this.handleChange}\n          onBlur={this.validateTitle}\n          error={errTitle}\n        />\n\n        <div className=\"Form__part\">\n          <p>Description</p>\n          <textarea\n            value={description}\n            name=\"description\"\n            onChange={this.handleChange}\n            className=\"Form__area\"\n          />\n        </div>\n\n        <NewMovieInput\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"https://www.imdb.com\"\n          onChange={this.handleChange}\n          onBlur={this.validateImgUrl}\n          error={errImgUrl}\n        />\n\n        <NewMovieInput\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"https://www.imdb.com\"\n          onChange={this.handleChange}\n          onBlur={this.validateImdbUrl}\n          error={errImdbUrl}\n        />\n\n        <NewMovieInput\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"tt0314331\"\n          onChange={this.handleChange}\n          onBlur={this.validateImdbId}\n          error={errImdbId}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"Form__button\"\n          disabled={\n            !title\n            || !imgUrl\n            || !imdbUrl\n            || !imdbId\n            || errImdbUrl !== null\n            || errImgUrl !== null\n          }\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string) => {\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState((state) => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}