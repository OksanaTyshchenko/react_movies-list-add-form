{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","regExp","NewMovie","state","errTitle","errImgUrl","errImdbUrl","errImdbId","handleChange","event","target","name","value","setState","handleChangeUrl","validateTitle","trim","validateImgUrl","test","validateImdbUrl","validateImdbId","submit","addMovie","props","preventDefault","every","el","this","onSubmit","type","placeholder","onChange","onBlur","classNames","Form__inputErr","disabled","Component","App","moviesFromServer","newMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfa1bb44.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string\n  ) => void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  errTitle: null | string;\n  errImgUrl: null | string;\n  errImdbUrl: null | string;\n  errImdbId: null | string;\n};\n\n// eslint-disable-next-line\nconst regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errTitle: null,\n    errImgUrl: null,\n    errImdbUrl: null,\n    errImdbId: null,\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n\n    if (name === 'title') {\n      this.setState({\n        errTitle: null,\n      });\n    }\n\n    if (name === 'imdbId') {\n      this.setState({\n        errImdbId: null,\n      });\n    }\n  };\n\n  handleChangeUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n\n    if (name === 'imgUrl') {\n      this.setState({\n        errImgUrl: null,\n      });\n    }\n\n    if (name === 'imdbUrl') {\n      this.setState({\n        errImdbUrl: null,\n      });\n    }\n  };\n\n  validateTitle = () => {\n    const { title } = this.state;\n\n    if (!title.trim()) {\n      this.setState({\n        errTitle: 'Please enter title',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateImgUrl = () => {\n    const { imgUrl } = this.state;\n\n    if (!imgUrl.trim() || !regExp.test(imgUrl)) {\n      this.setState({\n        errImgUrl: 'Please enter image link',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateImdbUrl = () => {\n    const { imdbUrl } = this.state;\n\n    if (!imdbUrl.trim() || !regExp.test(imdbUrl)) {\n      this.setState({\n        errImdbUrl: 'Please enter IMDB link',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateImdbId = () => {\n    const { imdbId } = this.state;\n\n    if (!imdbId.trim()) {\n      this.setState({\n        errImdbId: 'Please enter IMDB Id',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  submit = (event: React.SyntheticEvent) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n    const { addMovie } = this.props;\n\n    event.preventDefault();\n\n    const arrFunc = [this.validateTitle(),\n      this.validateImdbId(),\n      this.validateImdbUrl(),\n      this.validateImgUrl()];\n    const validate = arrFunc.every(el => el);\n\n    if (validate) {\n      addMovie(title, description, imgUrl, imdbUrl, imdbId);\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errImdbId,\n      errImgUrl,\n      errTitle,\n      errImdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.submit}>\n        <h2>Create new movie</h2>\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            placeholder=\"Title\"\n            onChange={this.handleChange}\n            onBlur={this.validateTitle}\n            className={classNames('Form__input', { Form__inputErr: errTitle })}\n          />\n        </label>\n        {errTitle && <span className=\"Form__error\">{errTitle}</span>}\n\n        <textarea\n          value={description}\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={this.handleChange}\n          className=\"Form__area\"\n        />\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            placeholder=\"imgUrl\"\n            onChange={this.handleChangeUrl}\n            onBlur={this.validateImgUrl}\n            className={classNames('Form__input', { Form__inputErr: errImgUrl })}\n          />\n        </label>\n        {errImgUrl && <span className=\"Form__error\">{errImgUrl}</span>}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            placeholder=\"imdbUrl\"\n            onChange={this.handleChangeUrl}\n            onBlur={this.validateImdbUrl}\n            className={classNames('Form__input',\n              { Form__inputErr: errImdbUrl })}\n          />\n        </label>\n        {errImdbUrl && <span className=\"Form__error\">{errImdbUrl}</span>}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            placeholder=\"imdbId\"\n            onChange={this.handleChange}\n            onBlur={this.validateImdbId}\n            className={classNames('Form__input', { Form__inputErr: errImdbId })}\n          />\n        </label>\n        {errImdbId && <span className=\"Form__error\">{errImdbId}</span>}\n\n        <button\n          type=\"submit\"\n          className=\"Form__button\"\n          disabled={\n            !title || !imgUrl || !imdbUrl || !imdbId\n          }\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string) => {\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState((state) => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}